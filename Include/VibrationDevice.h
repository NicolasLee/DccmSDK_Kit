#pragma once

#ifndef VIBRATION_DEVICE_API
    #define VIBRATION_DEVICE_API __declspec(dllimport)
#endif


class VIBRATION_DEVICE_API VibrationDevice
{
public:
	virtual ~VibrationDevice(void){};

	//打开指定的串口
//************************************************************************
	//函数名： Open
	//函数功能： 打开并初始化串口
	//参数：        1  	lpsCommNum		--- 串口号
	//				  2		iBaudRate		--- 波特率
	//				  3		iBYTESize		--- 数据位
	//				  4		iStopBits		--- 停止位
	//				  5		iParity			---奇偶校验
	//返回值：0 成功 非0 失败
	//***********************************************************************
	virtual BOOL Open(LPSTR lpsCommNum, int iBaudRate, int iBYTESize,int iStopBits, int iParity) = 0;


	//通过注册表自动搜索可用串口号，并打开串口;
	virtual BOOL Open(void)  = 0;

	//************************************************************************
	//函数名： Close
	//函数功能： 关闭串口
	//参数：       无
	//返回值：0 成功 非0 失败
	//***********************************************************************
	virtual int Close()  = 0;

	/************************************************************************
	函数名： isOnline
	函数功能：确认机器是否连接
	参数：	无
	返回值：BOOL TRUE 连接OK FALSE 连接失败
	***********************************************************************/
	virtual BOOL isOnline() = 0;

	/************************************************************************
	函数名： getRate
	函数功能：获得当前速度，最大获得频率1HZ;
	参数：	int
	返回值：BOOL TRUE 获取成功 FALSE 获取失败 -1,驱动板紊乱，将停止
	***********************************************************************/
	virtual BOOL GetRate( int& Rate) = 0;
	/************************************************************************
	函数名： setRate
	函数功能：设置当前速度
	参数：	int
	返回值：BOOL TRUE 设置成功 FALSE 设置失败
	***********************************************************************/
    virtual BOOL SetRate(int Rate) = 0;

	/************************************************************************
	函数名： OnStart
	函数功能：运行或者停止振动台
	参数：	BOOL TRUE 运行 FALSE停止
	返回值：BOOL TRUE 设置成功 FALSE 设置失败
	***********************************************************************/
    virtual BOOL Start(BOOL on) = 0;

	/************************************************************************
	函数名： BackToOrigin
	函数功能：振动台回归原点，保持水平
	参数：	BOOL TRUE 运行 FALSE停止
	返回值：BOOL TRUE 设置成功 FALSE 设置失败
	***********************************************************************/
	virtual BOOL BackToOrigin() = 0;
	/************************************************************************
	函数名： CF_100debug
	函数功能：让振动台低速运转并自动回位
	参数：	m_HZ：.01HZ转速 
	返回值：BOOL TRUE 设置成功 FALSE 设置失败
	***********************************************************************/
	virtual BOOL Vibratedebug(int m_HZ,BOOL REST=1) = 0;
	/************************************************************************
	函数名： VerifyOrigin
	函数功能：强制停止，并回原点，并等待回原点成功后返回
	参数：	无
	返回值：BOOL TRUE 回原点成功 FALSE 回原点失败
	***********************************************************************/
	virtual BOOL VerifyOrigin() = 0;
	/************************************************************************
	函数名： CheckOrigin
	函数功能：检查是否在原点位置
	参数：	无
	返回值：BOOL TRUE 原点 FALSE 非原点
	***********************************************************************/
	virtual BOOL CheckOrigin()=0;
	/************************************************************************
	函数名： getX1
	函数功能：获得当前X1开关状态
	参数：	无
	返回值：BOOL TRUE ON FALSE OFF
	***********************************************************************/
	virtual BOOL getX1()=0;
	/************************************************************************
	函数名： ISBackToOrigin
	函数功能：获得当前X1开关状态
	参数：	TRUE开启X1回原点 FALSE关闭X1回原点
	返回值：BOOL TRUE 成功 FALSE 失败
	***********************************************************************/
	virtual BOOL ISBackToOrigin(BOOL temp)=0;
	
	/************************************************************************
	函数名： LeaveOrigin
	函数功能：让振动台在回原点后进行移动1/4圈
	参数：	无
	返回值：BOOL TRUE 成功 FALSE 失败
	***********************************************************************/
	virtual	BOOL LeaveOrigin(BOOL m_re)=0;
	/************************************************************************
	函数名： ShieldSwitch 
	函数功能：屏蔽手动开关  //默认就是屏蔽状态
	参数：	BOOL TRUE屏蔽手动开关，FALSE取消屏蔽手动开关
	返回值：BOOL TRUE 成功 FALSE 失败
	***********************************************************************/
	virtual	BOOL ShieldSwitch(BOOL m_re) = 0;
	virtual void Test()=0;
	/************************************************************************
	函数名： Spin 
	函数功能：转动震动平台
	参数：	TRUE 转动90°  FALSEh回归
	返回值：BOOL TRUE 成功 FALSE 失败
	***********************************************************************/
	virtual BOOL Spin(BOOL m_move) =0;
};

//创建对象实例
 VIBRATION_DEVICE_API VibrationDevice* CreateVibrationDevice(void);
//释放对象实例
 VIBRATION_DEVICE_API void FreeVibrationDevice(VibrationDevice* pDevice);