[pdaf]
en = 1                                             ; enable PDAF module
pe_en = 0                                          ; Programmable engine enable
pat_dash = 0                                       ; Dash number (number of non-PDAF pixels between two consequtive PDAF pairs)
                                                   ;   0 - full PDAF line
                                                   ;   1 - dashed 2-1 PDAF line
                                                   ;   2 - dashed 2-2 PDAF line
pat_rg = 0                                         ; RG PDAF pattern support
pat_g_only = 0                                     ; In case of RG dashed 2-1 PDAF pattern, this option will only extract green PDAF pixels
flip_v = 0                                         ; Bayer pattern orientation: 
flip_h = 0                                         ; {flip_v, flip_h}: b00 - GR/BG, b01 - RG/GB, b10 - BG/GR, b11 - GB/RG
x_addr_start = 0                                   ; Crop region top left coordinate X coordinate (relative to full resolution, before skip or bin)
y_addr_start = 0                                   ; Crop region top left coordinate Y coordinate (relative to full resolution, before skip or bin)
x_addr_end = 4631                                  ; Crop region bottom right coordinate X coordinate (relative to full resolution)
y_addr_end = 3491                                  ; Crop region bottom right coordinate Y coordinate (relative to full resolution). 
                                                   ; In case y_odd_inc is not 1, this coordinate should point to last line that will actually be read out.
mirror_row = 0                                     ; Vertical mirror
mirror_col = 0                                     ; Horizontal mirror
x_odd_inc = 1                                      ; Horizontal skipping/binning factor of input image
y_odd_inc = 1                                      ; Vertical skipping/binning factor of input image
y_bin = 0                                          ; Vertical bin of input image (y_odd_inc will declare the factor)
t2_ln_nb = 0                                       ; T2 in lines
pdaf_pedestal = 0.000000000000                     ; data pedestal/offset after correction for PDAF stream
sat_th = 0.998779296875                            ; saturation threshold (strong tag pixels we are unsaturating)
pat_en = 1                                         ; When 0, all rows in pdaf_meta are set to 3 (marking of PDAF rows to BPC is disabled)
; h border = 192
;pat_x0 = 192                                       ; X coordinate of the first PDAF pixel in the line 
;pat_x1 = 4439                                      ; X coordinate of the last PDAF pixel in the line
; h border = 384
pat_x0 = 384                                       ; X coordinate of the first PDAF pixel in the line 
pat_x1 = 4247                                      ; X coordinate of the last PDAF pixel in the line
pat_border_x0 = 0                                  ; X coordinate of the firs non-border PDAF pixel in the line
pat_border_x1 = 16383                              ; X coordinate of the last non-border PDAF pixel in the line
pat_y0 = 216                                       ; Y coordinate of the the first PDAF line
pat_y1 = 3288                                      ; Y coordinate of the last PDAF line
pat_yd = 96                                        ; Y distance between PDAF lines
pat_dhdr = 0                                       ; support dualHDR pattern
pat_dhdr_t2 = 0                                    ; PDAF extraction from t2 exposure fame in dualHDR mode
pat_skip = 0                                       ; Skip PDAF lines from extraction
border_gain_g = 1.0000000000                       ; Border correction green gain (used in Y-bin mode where PDAF line is not sum-charged and pixels will have ~2x lower values)
border_gain_r = 1.0000000000                       ; Border correction red gain (used in Y-bin mode where PDAF line is not sum-charged and pixels will have ~2x lower values)
sc_en = 1                                          ; Enable spatial correction (for visual and focus path)
sc_pdaf_en = 1                                     ; enable spatial correction for focus path
sc_pdaf_sh = 0                                     ; If 1, shift right one bit (in case we would like to use ADC range above 1.0
                                                   ; using digital gains lower than 1.0). If negative shift left one or 
                                                   ; two bits (in case we have good 11 or 12 bits out of ADC and we want to 
                                                   ; use the LSBs  - in low light condition)
sc_origin_x = 2316                                 ; spatial correction image center X coordinate
sc_origin_y = 1746                                 ; spatial correction image center Y coordinate

sc_f =  1.030, 1.044, 0.000, 0.000, 1.009, 1.014, 0.000, 0.000, 1.016, 1.012, 0.000, 0.000, 1.000, 0.998, 0.000, 0.000, 0.910, 0.910, 0.000, 0.000, 0.000, 0.000 ; spatial correction mantissa
sc_sh = 9,9,0,0,11,11,0,0,10,10,0,0,11,11,0,0,9,9,0,0,0,0 ; spatial correction shift
sc_slope_x_left = -0.039, 0.016, 0.000, 0.000,-0.086,-0.031, 0.000, 0.000,-0.086, 0.023, 0.000, 0.000,-0.094,-0.039, 0.000, 0.000, 0.070, 0.070, 0.000, 0.000, 0.000, 0.000 ; spatial correction slope from center to left
sc_slope_x_right = -0.008,-0.016, 0.000, 0.000, 0.055,-0.023, 0.000, 0.000,-0.117, 0.000, 0.000, 0.000,-0.094, 0.062, 0.000, 0.000,-0.062,-0.062, 0.000, 0.000, 0.000, 0.000 ; spatial correction slope from center to right
sc_slope_y_up = -0.516,-0.500, 0.000, 0.000,-0.898,-0.820, 0.000, 0.000, 0.164, 0.430, 0.000, 0.000, 0.312, 0.469, 0.000, 0.000,-0.500,-0.500, 0.000, 0.000, 0.000, 0.000 ; spatial correction slope from center upwards
sc_slope_y_down = -0.094,-0.188, 0.000, 0.000,-0.250,-0.391, 0.000, 0.000, 0.781, 0.680, 0.000, 0.000, 0.711, 0.695, 0.000, 0.000, 0.359, 0.359, 0.000, 0.000, 0.000, 0.000 ; spatial correction slope from center downwards

sc_visual_tag = 0,0,0,0,0,0,0,0                    ; PDAF pixel tagging, visual path (top PDAF neighbor line, PDAF pixels in PDAF line, bottom PDAF neigbor line, non-PDAF pixels in PDAF line respectively)
sc_tag_ext = 0                                     ; Enable waek-tagging of boarder non-PDAF pixels
dc_en = 1                                          ; PDAF 1DDC enable
dc_th_abs = 0.049804687500                         ; PDAF 1D defect correction absolute threshold
dc_th_rel = 0.09765625                             ; PDAF 1D defect correction relative threshold
dc_diff_factor = 1.0000                            ; PDAF 1D defect correction 
bin_size = 0                                       ; 2^bin number of pixels to bin
skip_en = 1                                        ; Subsample instead of binning
den_w = 2                                          ; window filter width
                                                   ;  0: 1 (OFF)
                                                   ;  1: 2
                                                   ;  2: 4
                                                   ;  3: 8
den2_en = 1                                        ; enable o second window filter (shuld always be enabled)
den_w = 2                                          ; 3-tap denoise weight/enable
dma_start = 0,0                                    ; DMA start address (inside buffer, data in DepthT)
dma_size = 2316,2316                               ; DMA size (inside buffer, data in DepthT)
dma_y0 = 1                                         ; start of first PDAF stats dump
dma_ny = 1                                         ; number of captured PDAF lines vertically
[bpc]
mode = 1                                           ; operating mode:
                                                   ;  0 = bypass
                                                   ;  1 = normal/Bayer mode
                                                   ;  2 = iHDR mode
                                                   ;  3 = sHDR, dual HDR mode
out_orig_en = 0                                    ; output original/corrected pixels
out_ror_en = 0                                     ; Rotate right output pixels
out_mask = 0.999755859375                          ; output bit mask
width = 4632                                       ; input image width
height = 3492                                      ; input image width
x_addr_start = 0                                   ; Crop region top left coordinate X coordinate (relative to full resolution, before skip or bin)
x_addr_end = 4631                                  ; Crop region bottom right coordinate X coordinate (relative to full resolution, before skip or bin)
mirror_col = 0                                     ; Horizontal mirror
mirror_row = 0                                     ; Vertical mirror
flip_h = 0                                         ; flip GR/BG Bayer pattern horizontally; invert when doing mirror
flip_v = 0                                         ; flip GR/BG Bayer pattern vertically; invert when doing mirror
hdr_yoffset = 100                                  ; iHDR Y offset to first T1 exposure
                                                   ; or in dual HDR mode Y offset to second exposure
shutter_coarse = 0,1238                            ; shutter integration time in lines (for T1/normal and T2 exposures, respectively)
bm_th = 1238,0,0                                   ; BM index selection thresholds
; h border = 192
;pdaf_pat_x0 = 192                                  ; PDAF pattern start X coordinate (inclusive)
;pdaf_pat_x1 = 4439                                 ; PDAF pattern end X coordinate (inclusive)
; h border = 384
pdaf_pat_x0 = 384                                  ; PDAF pattern start X coordinate (inclusive)
pdaf_pat_x1 = 4247                                 ; PDAF pattern end X coordinate (inclusive)
lift = 0.041015625000                              ; black level or other fixed offset
bloom_th = 0.999755859375                          ; threshold where blooming/saturation starts
noise_coef = 0.43750                               ; noise coefficient
noise_floor_tab = 0.017578125000,0.017578125000,0.017578125000,0.017578125000 ; noise floor table (based on analog gain)
noise_floor_th = 1.0000,2.0000,4.0000              ; noise floor analog gain thresholds
noise_add_gp = 0.0000                              ; increase noise in busy regions
digital_gain = 1.000000,1.000000,1.000000,1.000000 ; amount of per channel digital gain applied before BPC
                                                   ; (for Gr, R, B and Gb channels respectively)
analog_gain = 1.1250,1.1250,1.1250,1.1250          ; amount of global analog gain (applied before BPC)
                                                   ; (for Gr, R, B and Gb channels respectively)
cold_en = 1.0000                                   ; enable cold defects
hot_en = 1.0000                                    ; enable hot defects
triple_en = 0                                      ; enable triplets
med_simple_en = 0                                  ; use simple median (min2+max2)/2
corr_single = 33089                                ; correction mode for single defects (non-flat&non-PDAF, flat&non-PDAF, non-flat&PDAF, flat&PDAF)
corr_double = 33346                                ; correction mode for double defects (non-flat&non-PDAF, flat&non-PDAF, non-flat&PDAF, flat&PDAF)
corr_weak = 33101                                  ; correction mode for weak tagged defects (non-flat&non-PDAF, flat&non-PDAF, non-flat&PDAF, flat&PDAF)
corr_strong = 33860                                ; correction mode for strong tagged defects (non-flat&non-PDAF, flat&non-PDAF, non-flat&PDAF, flat&PDAF)
corr_weak_max = 0.0000                             ; max. allowed relative correction for weak tagged defects (0 = turn off)
pc_mask = 60576                                    ; mask for similar neighbors for precheck
                                                   ;   0x0000 = precheck disabled (0% success)
                                                   ;   0x1000 = 4 similar neighbors required (~70% success)
                                                   ;   0xe880 = 3 similar neighbors required (~85% success)
                                                   ;   0xfee8 = 2 similar neighbors required (~95% success)
                                                   ;   0xfffe = 1 similar neighbors required (~99% success)
                                                   ;   0xeca0 = 2 similar neighbors required, except corners (~90% success)
pc_sigma = 0.9375                                  ; noise factor for precheck threhold
qr_sigma = 0.6250                                  ; quiet region noise threshold; set to 0 to disable
gp_sigma = 0.6250                                  ; noise factor on gradients predictors
gp_num_ofs = 0.009765625000                        ; offset for color divison numerator
gp_same_line = 0,0,0,0,0,0                         ; use only gradients in same line
gp_use_weak = 1                                    ; use weak tags for prediction
sf_sigma = 0.6250                                  ; single detection noise factor threshold
df_sigma_tab = 0.6250,0.6250,0.6250,0.6250         ; double detection noise factor threshold
dc_sigma_tab = 1.8750,1.8750,1.8750,1.8750         ; double cross channel noise factor threshold
dc_f_tab = 0.2500,0.2500,0.2500,0.2500             ; double cross channel details factor
den_en_tab = 0.0000,0.0000,0.0000,0.0000           ; denoise enable/bypass
den_dis_th = 0.989990234375                        ; denoise bloom disable theshold
den_sigma = 1.0000                                 ; denoise noise factor threshold
den_tri_sigma = 1.0000                             ; trilateral denoise noise factor threshold
den_abyp_sigma = 0.125000                          ; absolute noise bypass factor threshold
wc_en = 0,0,0,0                                    ; weak cluster correction on PDAF lines (y-1,y,y+1) and non-PDAF lines, respectively
wc_th_half = 0.000000000000                        ; threshold for check 3
wc_th_upr = 0.000000000000                         ; threshold for check 1  
wc_th_lwr = 0.000000000000                         ; threshold for check 2
pdaf_rec_en = 1                                    ; enable PDAF lines reconstruction
pdaf_rec_gg = 1                                    ; PDAF GG pattern select
pdaf_rec_diag = 0                                  ; reconstruct also PDAF diagonal neighbors using tolerances
pdaf_rec_use_rp = 1                                ; tolerance reconstruction uses PDAF pixels for calculating the reference
pdaf_rec_refr = 1.0620                             ; calibration white balance gains for adaptive PDAF reconstruction uses nearby pixel reference gain, set to 0 to disable
pdaf_rec_refb = 1.5000                             ; calibration white balance gains for adaptive PDAF reconstruction uses nearby pixel reference gain, set to 0 to disable
pdaf_rec_vmode = 2,0,3                             ; vertical PDAF reconstruction mode (for up,P1P2,dn):
                                                   ;   0 = vert average
                                                   ;   1 = neareast copy
                                                   ;   2 = up,down horizontal median
                                                   ;   3 = vertical median
pdaf_rec_severe = 0.875                            ; PDAF reconstruction severe P1:P2 ratio (strong tag will be applied)
pdaf_rec_weird = 0.000                             ; PDAF reconstruction weird reference ratio (weak tag will be applied)
pdaf_rec_vert = 0.2500                             ; PDAF reconstruction forced vertical interpolation (H/V gradient ratio)
pdaf_silent_tag = 0,0,0                            ; silent weak tagging enable done just before the correction
pdaf_rec_tol_rr = 0.,*                             ; amount of relative color tolerance for PDAF pixel reconstruction (for: Bu,Gu,P1,P2,Bd,Gd)
pdaf_rec_tol_rb = 0.,*                             ; amount of relative color tolerance for PDAF pixel reconstruction (for: Bu,Gu,P1,P2,Bd,Gd)
pdaf_rec_tol_rel = 0.,*                            ; amount of relative tolerance for PDAF pixel reconstruction       (for: Bu,Gu,P1,P2,Bd,Gd)
pdaf_rec_tol_abs = 0.,*                            ; amount of absolute tolerance for PDAF pixel reconstruction       (for: Bu,Gu,P1,P2,Bd,Gd)
pdaf_rec_tol_grad = 0.00                           ; PDAF reconstruction reduction near gradients
pdaf_rec_tol_dark = 0.000000000000                 ; PDAF reconstruction is fully turned on below this threshold
pdaf_grad_en = 1,1,1                               ; disable gradient prediction around PDAF lines
